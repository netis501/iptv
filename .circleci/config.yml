version: 2.1

# To test 2.1 config locally you need to run:
# circleci config process .circleci/config.yml > ci.yml.tmp && circleci local execute -c ci.yml.tmp

jobs:
  test:
    docker:
      - image: technic93/e2xvfb
    parameters:
      provider:
        type: string
        default: "all"
    environment:
      PROVIDER: << parameters.provider >>
    steps:
      - checkout
      - run:
          name: info
          command: |
            uname -a
            whoami
            echo PROVIDER=${PROVIDER}
      - run:
          name: prepare
          command: |
            apt-get update && apt-get install -y python-virtualenv
            python -m virtualenv env
            source env/bin/activate
            python -m pip install pylint pycodestyle twisted "setuptools<45"
      - run:
          name: pep8
          command: |
            source env/bin/activate
            echo $PATH |tr ':' '\n'
            pycodestyle --version
            pycodestyle src
      - run:
          name: pylint
          # pylint mask fatal=1 | error=2 | usage error=32
          command: |
            source env/bin/activate
            PYTHONPATH=/usr/lib/enigma2/python pylint src || exit $(( $? & 35 ))
      - run:
          name: test update
          command: |
            mkdir -p /dev/input
            service apache2 start
            Xvfb :99 -ac -screen 0 1280x720x16 &
            export DISPLAY=:99
            ps ax
            cat src/dist.py
            python update-test.py

  build:
    docker:
      - image: technic93/e2xvfb
    parameters:
      provider:
        type: string
        default: "all"
    environment:
      PROVIDER: << parameters.provider >>
    steps:
      - checkout
      - run:
          name: info
          command: |
            uname -a
            whoami
            echo PROVIDER=${PROVIDER}
      - run:
          name: build
          command: |
            make
            make DEB=y
      - persist_to_workspace:
          root: .
          paths:
            - packages/*
      - store_artifacts:
          path: ./packages

  deploy:
    docker:
      - image: python:2.7.15
    steps:
      - checkout
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "45:16:fd:9e:94:b8:84:59:ae:5b:50:6e:e7:e2:e5:09"
      - run:
          name: add fingerprint
          command: echo $UPDATE_FINGERPRINT >> ~/.ssh/known_hosts
      - run:
          name: Deploy
          command: |
            apt-get update && apt-get install -y rsync
            ls -lR packages/
            rsync -rlt --delay-updates packages/ $UPDATE_SERVER:~/iptvdream4x/packages

  mirror:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "9b:68:18:d4:e9:38:67:9f:e0:5c:37:83:96:ff:f3:4d"
      - run:
          name: GitHub mirror
          command: |
            git remote add github git@github.com:technic/iptvdream4x.git
            git push --mirror github

references:
  config-all: &config-all
    provider: all
    filters:
      branches:
        ignore:
          - /^cbilling.*/
          - /^73mtv.*/
      tags:
        only: /^v.*/

  config-cbilling: &config-cbilling
    provider: cbilling
    filters:
      branches:
        only:
          - /^cbilling.*/
      tags:
        only: /^cbilling.*/

  config-73mtv: &config-73mtv
    provider: 73mtv
    filters:
      branches:
        only: /^73mtv.*/
      tags:
        only: /^73mtv\/.*/

workflows:
  task-all:
    jobs:
      - test: *config-all
      - build: *config-all
      - mirror:
          filters:
            branches:
              only: [master]

  task-cbilling:
    jobs:
      - test: *config-cbilling
      - build: *config-cbilling
      - deploy:
          requires:
            - test
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /cbilling\/v\/(\d)+(\.(\d)+)+$/

  task-73mtv:
    jobs:
      - test: *config-73mtv
      - build: *config-73mtv
      - deploy:
          requires:
              - test
              - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /73mtv\/v\/(\d)+(\.(\d)+)+$/
